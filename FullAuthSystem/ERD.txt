User    => Represents an individual user in the system
    - id: Unique identifier (UUID or auto-incremented integer)
    - username: User's unique username
    - email: User's email address
    - passwordHash: Hashed password
    - firstName: User's first name
    - lastName: User's last name
    - phone: user phone number
    - address: user address
    - createdAt: Timestamp of account creation
    - updatedAt: Timestamp of last account update
    - lastLogin: Timestamp of last login
    - status: Account status (e.g., active, suspended)
    - salt: for password hashing

    - roles: Array or list of roles assigned to the user

Role    => Defines a set of permissinos grouped under a named role, such as Admin, or User
    - id: Unique identifier
    - name: Name of the role (e.g., Admin, User, Moderator)
    - description: Description of the role
    
    - permissions: Array or list of permissions associated with the role

Permission  => Represents a specific action or set of actinos that can be performed in the system, such as read/write post
    - id: Unique identifier
    - name: Name of the permission (e.g., read:user, write:post)
    - description: Description of the permission

Session => Tracks active sessions for users, particularly useful for maintaining user state in stateless architectures using tokens (JWT)
    - id: Unique identifier
    - token: JWT or session token
    - createdAt: Timestamp of session creation
    - expiresAt: Timestamp of session expiration
    - ipAddress: IP address of the user's device
    - userAgent: User agent string of the user's device

    - userId(FK): Reference to the User entity

PasswordResetToken  => Facilitates the password reset process by providing a secure token that can be sent to the user's email
    - id: Unique identifier
    - token: Unique token for password reset
    - createdAt: Timestamp of token creation
    - expiresAt: Timestamp of token expiration
    - ipAddress
    - userAgent

    - userId(FK): Reference to the User entity

EmailVerificationToken  => Verifies a user's email address during registration or when updating their email
    - id: Unique identifier
    - token: Unique token for email verification
    - createdAt: Timestamp of token creation
    - expiresAt: Timestamp of token expiration

    - userId(FK): Reference to the User entity

LoginAttempt    => Records attempts to log in the system, helping to monitor and secure against unauthorized acess
    - id: Unique identifier
    - timestamp: Timestamp of login attempt
    - ipAddress: IP address of the user's device
    - userAgent: User agent string of the user's device
    - successful: Boolean indicating if the login attempt was successful

    - userId(FK): Reference to the User entity (nullable if attempt failed before identifying the user)

AuthenticationProviders
    - id: Unique identifier for the authentication provider.
    - providerName: Name or identifier of the authentication provider (e.g., Google, Facebook).
    - providerUserID: Unique identifier for the user on the authentication provider's platform.
    - accessToken: Token obtained from the authentication provider for making authorized requests on behalf of the user.

    - userID(FK): Reference to the user in the local system (foreign key).



Relationships
    User - Role: Many-to-Many
        A user can have multiple roles.
        A role can be assigned to multiple users.

    Role - Permission: Many-to-Many
        A role can have multiple permissions.
        A permission can be associated with multiple roles.

    User - Session: One-to-Many
        A user can have multiple active sessions.

    User - PasswordResetToken: One-to-Many
        A user can have multiple password reset tokens (usually, only the latest one is valid).

    User - EmailVerificationToken: One-to-Many
        A user can have multiple email verification tokens (usually, only the latest one is valid).

    User - LoginAttempt: One-to-Many
        A user can have multiple login attempts recorded.


sequelize-cli

npx sequelize-cli model:generate --name User --attributes id:UUID,username:string,email:string,passwordHash:string,firstName:string,lastName:string,phone:string,address:string,createdAt:date,updatedAt:date,lastLogin:date,status:string,salt:string
npx sequelize-cli model:generate --name Role --attributes id:UUID,name:string,description:string
npx sequelize-cli model:generate --name Permission --attributes id:UUID,name:string,description:string
npx sequelize-cli model:generate --name PasswordResetToken --attributes id:UUID,token:string,createdAt:date,expiresAt:date,ipAddress:string,userAgent:string
npx sequelize-cli model:generate --name EmailVerificationToken --attributes id:UUID,token:string,createdAt:date,expiresAt:date
npx sequelize-cli model:generate --name LoginAttempt --attributes id:UUID,timestamp:date,ipAddress:string,userAgent:string,successful:boolean
npx sequelize-cli model:generate --name AuthenticationProvider --attributes id:UUID,providerName:string,providerUserID:string,accessToken:string






